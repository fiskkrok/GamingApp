@page "/"
@using GamingApp.Web.Clients
@using GamingApp.Web.Models
@using GamingApp.Web.Components.Blocks
@inject UserApiClient UserApiClient
@inject GameApiClient GameApiClient
@inject NavigationManager NavigationManager
@attribute [Authorize]

<PageTitle>Dashboard - Pixel Quest</PageTitle>

<div class="container">
    <div class="dashboard-wrapper">
        <h1 class="page-title">Welcome to Your Gaming Dashboard</h1>

        @if (_loading)
        {
            <FluentProgressRing />
        }
        else
        {
            <div class="grid grid-cols-3 gap-4">
                <div class="card">
                    <h2 class="mb-2">Recently Played</h2>
                    @if (RecentGames.Any())
                    {
                        <FluentDataGrid Items="@RecentGames.AsQueryable()" GridTemplateColumns="1fr 1fr">
                            <PropertyColumn Property="@(g => g.Name)" Title="Game" />
                            <PropertyColumn Property="@(g => g.LastPlayedDate)" Title="Last Played" Format="MMM dd, yyyy" />
                        </FluentDataGrid>
                    }
                    else
                    {
                        <p>No recent games played.</p>
                    }
                </div>

                <div class="card">
                    <h2 class="mb-2">Your Stats</h2>
                    <div class="d-flex flex-column">
                        <span>Total Play Time: @UserProfile?.TotalPlayTime.TotalHours.ToString("F1") hours</span>
                        <span>Games Played: @UserProfile?.GamesPlayed.Count</span>
                        <span>Achievements Unlocked: @UserProfile?.AchievementsUnlocked.Count</span>
                    </div>
                </div>

                <div class="card">
                    <h2 class="mb-2">Quick Actions</h2>
                    <div class="d-flex flex-column">
                        <button @onclick="@(() => NavigateTo("/games"))" class="btn btn-primary mb-1">Browse Games</button>
                        <button @onclick="@(() => NavigateTo("/profile"))" class="btn btn-primary mb-1">View Profile</button>
                        <button @onclick="@(() => NavigateTo("/friends"))" class="btn btn-primary">Friends List</button>
                    </div>
                </div>
            </div>

            <div class="mt-3">
                <h2 class="mb-2">Game Recommendations</h2>
                <GameCardComponent Games="RecommendedGames" />
            </div>
        }
    </div>
</div>


@code {
    private IEnumerable<Game> RecentGames { get; set; } = [];
    private IEnumerable<Game> RecommendedGames { get; set; } = [];
    private UserProfile? UserProfile { get; set; }
    private bool _loading = true;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            RecentGames = await GameApiClient.GetRecentGamesAsync(5);
            RecommendedGames = await GameApiClient.GetRecommendedGamesAsync(4);
            UserProfile = await UserApiClient.GetUserProfileAsync();
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Error loading dashboard: {ex.Message}");
        }
        finally
        {
            _loading = false;
        }
    }

    private void NavigateTo(string url)
    {
        NavigationManager.NavigateTo(url);
    }
}
